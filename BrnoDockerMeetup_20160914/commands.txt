


# run it using `docker run`
docker run -d --name backend -p 3000:3000 tomaskral/kompose-demo-backend    
docker run -d --name frontend -p 8080:8080 -e API_URL=http://localhost:3000/api tomaskral/kompose-demo-frontend

# start demo using docker-compose
BACKEND_HOST="localhost:3000" docker-compose up

# run it on kubernetes without yaml files
kubectl run frontend --image=tomaskral/kompose-demo-frontend  --port=8080 --expose --env=API_URL=http://backend.192.168.42.221.xip.io/api
kubectl run backend --image=tomaskral/kompose-demo-backend  --port=3000 --expose

# deploy to kubernetes using `kompose up`
BACKEND_HOST=backend.192.168.42.221.xip.io kompose up

# create ingress for minikube
kubectl create -f ingress.yaml

# deploy to openshift online
token request: https://api.preview.openshift.com/oauth/token/request
BACKEND_HOST="backend-brno.44fs.preview.openshiftapps.com" kompose convert --dc -o openshfit.json
oc create -f openshift.json

# start Kubernetes cluster in GCP
gcloud container clusters create kompose --machine-type=g1-small --num-nodes=1

# start Kubernetes in AWS
export KOPS_STATE_STORE=s3://tomas.kral-kops
kops create cluster --cloud=aws --zones=eu-west-1a --name=meetup.aws.tomkral.eu
kops update cluster meetup.aws.tomkral.eu --yes



